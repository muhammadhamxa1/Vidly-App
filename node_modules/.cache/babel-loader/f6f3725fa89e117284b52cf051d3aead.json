{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/vidly/vidly/src/components/movies.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from \"./common/pagination\";\nimport ListGroup from './common/genre';\nimport MoviesTable from './common/movieTable';\nimport Paginate from '../utils/paginate';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genre: [],\n      currentPage: 1,\n      pageSize: 4,\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genre = [{\n      name: 'All Movies',\n      _id: '0'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genre\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movie in database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id !== '0' ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = Paginate(sorted, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genre,\n          selectItems: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" There are \", filtered.length, \" movie in database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this);\n  }\n\n} // Movies;","map":{"version":3,"sources":["/home/dev/Desktop/vidly/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","ListGroup","MoviesTable","Paginate","_","Movies","state","movies","genre","currentPage","pageSize","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handleChange","page","handleSort","handleGenreSelect","selectedGenre","componentDidMount","name","render","length","count","allMovies","filtered","sorted","orderBy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {getMovies} from '../services/fakeMovieService';\nimport {getGenres} from '../services/fakeGenreService'\nimport Pagination from \"./common/pagination\";\nimport ListGroup from './common/genre';\nimport MoviesTable from './common/movieTable';\nimport Paginate  from '../utils/paginate'\nimport _ from 'lodash';\n\n\nexport default class Movies extends Component {\n    state={\n        movies: [],\n        genre:[],\n        currentPage: 1,\n        pageSize: 4,\n        sortColumn: { path: 'title' ,order:  'asc' }\n    }; \n    handleDelete = movie =>{\n        const movies=this.state.movies.filter(m => m._id !== movie._id);\n        this.setState({movies})\n    };\n    handleLike=movie=>{\n        const movies=[...this.state.movies]\n        const index=movies.indexOf(movie);\n        movies[index]={...movies[index]};\n        movies[index].liked=!movies[index].liked;\n        this.setState({movies});\n    };\n    handleChange=page=>{\n       this.setState({currentPage:page});\n    };\n    handleSort=sortColumn   =>{\n      \n        this.setState({sortColumn})\n    }\n  \n    componentDidMount(){\n        const genre =[{name:'All Movies',_id:'0'},...getGenres()];\n        this.setState({movies:getMovies(),genre});\n    };\n    handleGenreSelect=genre=>{ \n        this.setState({selectedGenre:genre })\n\n    };\n    render() { \n        const {length: count}=this.state.movies;\n        const {\n            pageSize,\n            currentPage,\n            selectedGenre,\n            sortColumn,\n            movies:allMovies\n        }=this.state;\n\n        if (count === 0)\n          return <p>There are no movie in database</p>\n\n          const filtered =\n            selectedGenre && selectedGenre._id !== '0' ? \n            allMovies.filter (m=> m.genre._id === selectedGenre._id) :\n            allMovies;\n\n          const sorted =_.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n           \n          const movies =Paginate(sorted,currentPage,pageSize)\n\n        return (\n            \n                <div className=\"row\">\n                    <div className=\"col-2\">\n                        <ListGroup \n                        items={this.state.genre}\n                        selectItems={this.state.selectedGenre}\n                        onItemSelect={this.handleGenreSelect}\n                        />\n                    </div>\n                    <div className=\"col\">\n                    <p> There are {filtered.length} movie in database</p>\n                       <MoviesTable \n                       movies={movies}\n                       onLike={this.handleLike}\n                       onDelete={this.handleDelete}\n                       onSort={this.handleSort}\n                       />\n                        <Pagination \n                        itemsCount={filtered.length} \n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handleChange}\n                        /> \n                    </div>\n                </div>\n             \n            \n           \n      \n        );\n    }\n}\n \n// Movies;"]},"metadata":{},"sourceType":"module"}